/**
 * Generated by orval v6.30.2 🍺
 * Do not edit manually.
 * Growinvoice API
 * Enhance your business with Growinvoice API
 * OpenAPI spec version: 1.0
 */
import { useMutation } from "@tanstack/react-query";
import type {
	MutationFunction,
	UseMutationOptions,
	UseMutationResult,
} from "@tanstack/react-query";
import type { Json2excelControllerCreateCsv201, Object, UploadResponseDto } from "./models";
import { authInstance } from "../../instances/authInstance";
import type { ErrorType } from "../../instances/authInstance";

export const json2excelControllerCreate = (json2excelControllerCreateBody: Object) => {
	return authInstance<UploadResponseDto>({
		url: `/api/json2excel`,
		method: "POST",
		headers: { "Content-Type": "application/json" },
		data: json2excelControllerCreateBody,
	});
};

export const getJson2excelControllerCreateMutationOptions = <
	TError = ErrorType<unknown>,
	TContext = unknown,
>(options?: {
	mutation?: UseMutationOptions<
		Awaited<ReturnType<typeof json2excelControllerCreate>>,
		TError,
		{ data: Object },
		TContext
	>;
}): UseMutationOptions<
	Awaited<ReturnType<typeof json2excelControllerCreate>>,
	TError,
	{ data: Object },
	TContext
> => {
	const { mutation: mutationOptions } = options ?? {};

	const mutationFn: MutationFunction<
		Awaited<ReturnType<typeof json2excelControllerCreate>>,
		{ data: Object }
	> = (props) => {
		const { data } = props ?? {};

		return json2excelControllerCreate(data);
	};

	return { mutationFn, ...mutationOptions };
};

export type Json2excelControllerCreateMutationResult = NonNullable<
	Awaited<ReturnType<typeof json2excelControllerCreate>>
>;
export type Json2excelControllerCreateMutationBody = Object;
export type Json2excelControllerCreateMutationError = ErrorType<unknown>;

export const useJson2excelControllerCreate = <
	TError = ErrorType<unknown>,
	TContext = unknown,
>(options?: {
	mutation?: UseMutationOptions<
		Awaited<ReturnType<typeof json2excelControllerCreate>>,
		TError,
		{ data: Object },
		TContext
	>;
}): UseMutationResult<
	Awaited<ReturnType<typeof json2excelControllerCreate>>,
	TError,
	{ data: Object },
	TContext
> => {
	const mutationOptions = getJson2excelControllerCreateMutationOptions(options);

	return useMutation(mutationOptions);
};
export const json2excelControllerCreateCsv = (json2excelControllerCreateCsvBody: Object) => {
	return authInstance<Json2excelControllerCreateCsv201>({
		url: `/api/json2excel/csv`,
		method: "POST",
		headers: { "Content-Type": "application/json" },
		data: json2excelControllerCreateCsvBody,
	});
};

export const getJson2excelControllerCreateCsvMutationOptions = <
	TError = ErrorType<unknown>,
	TContext = unknown,
>(options?: {
	mutation?: UseMutationOptions<
		Awaited<ReturnType<typeof json2excelControllerCreateCsv>>,
		TError,
		{ data: Object },
		TContext
	>;
}): UseMutationOptions<
	Awaited<ReturnType<typeof json2excelControllerCreateCsv>>,
	TError,
	{ data: Object },
	TContext
> => {
	const { mutation: mutationOptions } = options ?? {};

	const mutationFn: MutationFunction<
		Awaited<ReturnType<typeof json2excelControllerCreateCsv>>,
		{ data: Object }
	> = (props) => {
		const { data } = props ?? {};

		return json2excelControllerCreateCsv(data);
	};

	return { mutationFn, ...mutationOptions };
};

export type Json2excelControllerCreateCsvMutationResult = NonNullable<
	Awaited<ReturnType<typeof json2excelControllerCreateCsv>>
>;
export type Json2excelControllerCreateCsvMutationBody = Object;
export type Json2excelControllerCreateCsvMutationError = ErrorType<unknown>;

export const useJson2excelControllerCreateCsv = <
	TError = ErrorType<unknown>,
	TContext = unknown,
>(options?: {
	mutation?: UseMutationOptions<
		Awaited<ReturnType<typeof json2excelControllerCreateCsv>>,
		TError,
		{ data: Object },
		TContext
	>;
}): UseMutationResult<
	Awaited<ReturnType<typeof json2excelControllerCreateCsv>>,
	TError,
	{ data: Object },
	TContext
> => {
	const mutationOptions = getJson2excelControllerCreateCsvMutationOptions(options);

	return useMutation(mutationOptions);
};
